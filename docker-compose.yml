version: "3"

services:
  etl:
    build: ./etl/
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      redis:
        condition: service_healthy
      kafka-1:
        condition: service_healthy

  web:
    build: ./src/
    env_file:
      - .env
    networks:
      - backend
    ports:
      - 8000:8000
    depends_on:
      redis:
        condition: service_healthy
      kafka-1:
        condition: service_healthy

  nginx:
    image: nginx:1.23
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/site.conf:/etc/nginx/conf.d/site.conf:ro
    depends_on:
      - web
    ports:
      - 80:80
    networks:
      - backend

  redis:
    image: redis:latest
    networks:
      - backend
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 50

  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: INFO
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:32888:33888;zookeeper-3:42888:43888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
    networks:
      - backend
    ports:
      - 22181:2181
      - 22888:2888
      - 23888:3888

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: INFO
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:32888:33888;zookeeper-3:42888:43888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
    networks:
      - backend
    ports:
      - 32181:2181
      - 32888:2888
      - 33888:3888

  zookeeper-3:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: INFO
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:32888:33888;zookeeper-3:42888:43888
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
    networks:
      - backend
    ports:
      - 42181:2181
      - 42888:2888
      - 43888:3888

  kafka-1:
    container_name: kafka-1
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - 29092:9092
    networks:
      - backend
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  kafka-2:
    container_name: kafka-2
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - 39092:9092
    networks:
      - backend
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  clickhouse-node1:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./cluster_configs/node1:/etc/clickhouse-server
    networks:
      - backend
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  clickhouse-node2:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    networks:
      - backend
    volumes:
      - ./cluster_configs/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  clickhouse-node3:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    networks:
      - backend
    volumes:
      - ./cluster_configs/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

  clickhouse-node4:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    networks:
      - backend
    volumes:
      - ./cluster_configs/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3

networks:
  backend:
    name: backend
    driver: bridge
