name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ] 

jobs:

  flake8_check:
    runs-on: ubuntu-latest
    env:
      report_path: flake_report
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-html
      - name: Create folder for artifact
        run: |
          mkdir ${{ env.report_path }}
      - name: Analysing the code with flake8
        run: flake8 --format=html --htmldir=${{ env.report_path }}
      - name: Save report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: flake report
          path: ${{ env.report_path }}

  mypy_check_src:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mypy
          mypy --install-types --non-interactive
      - name: Check src
        run: |
          mypy --ignore-missing-imports ./src
  
  mypy_check_etl:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mypy
      - name: Check etl
        run: |
          mypy --ignore-missing-imports ./etl
  
  notify_telegram:
    runs-on: ubuntu-latest
    needs: [flake8_check, mypy_check_src, mypy_check_etl]
    steps:
      - name: Send notify in tg
        run: |
          curl -X POST -H 'Content-Type: application/json' -d "{\"chat_id\": \"${{ secrets.CHAT_ID }}\", \"text\": \"Пайплайн нормально собрался 🎉🎉🎉\"}" \
          https://api.telegram.org/bot${{ secrets.API_TOKEN }}/sendMessage &>/dev/null
